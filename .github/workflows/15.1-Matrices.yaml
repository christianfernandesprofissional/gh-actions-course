name: 15.1 -  Working with Matrices
on: workflow_dispatch

jobs:
  backwards-compatibility:
    name: ${{matrix.os}}-${{matrix.node-version}}
    runs-on: ${{matrix.os}} #Desta maneira o github vai rodar em todas as combinações possíveis entre os e Node-version
    strategy:
      fail-fast: false # se for true, se um job falhar, todos os outros serão cancelados
      matrix:
        node-version: [ 18.x, 20.x, 21.x]  
        os: 
          - ubuntu-latest
          - windows-latest
        include: #essa chave permite adicionar combinações específicas que queremos
          - os: ubuntu-latest
            node-version: 16.x 
          - os: ubuntu-latest
            node-version: 23.x
            tag: experimental #Como esta combinação já existe, será adicionada essa tag a ela
    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with: 
          node-version: ${{matrix.node-version}}
      - name: Fail if experimental
        if: matrix.tag == 'experimental'
        run: exit 1
      - name: Perform  some tests
        run: |
          echo "Running tests on OS ${{matrix.os}} and NodeJS ${{matrix.node-version}}"
          sleep 10
      - name: Upload test results
        run: echo "Uploading test results"
  include-example:
    name: ${{matrix.color}}-${{matrix.shape}}-${{matrix.size}}-${{matrix.opacity}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        color: [red, green]
        shape: [circle, square]
        size: [small, large]
        include: 
          - opacity: 50 #essa entrada, como ela não sobrepõe nada, ela será combinada com todos os nossos valores
          - color: red 
            opacity: 75 #Esses valores serão sobrescritos, já que é um valor passado no include
                        #tudo que tem cor vermelha tera opacity de 75, e abaixo tudo que for circulo tera opacity 100
          - shape: circle
            opacity: 100
          - color: red
            shape: triangle #como nos não fornecemos 'size' ele vai ficar assim e não vai tentar combinar
    steps:
      - name: Dummy step
        run: echo "${{matrix.color}}-${{matrix.shape}}-${{matrix.size}}-${{matrix.opacity}}"